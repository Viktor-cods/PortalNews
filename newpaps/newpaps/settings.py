"""
Django settings for newpaps project.

Generated by 'django-admin startproject' using Django 4.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-+)1w+gfz^fr_(r$9ty+3*arz8q8vbq8=#!sq%ziq7c30o0adbp'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [

    'modeltranslation',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'news.apps.NewsConfig',
    'django_filters',
    'accounts',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.yandex',
    'django_apscheduler',
    'rest_framework',


]

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',

    'django.middleware.locale.LocaleMiddleware',

    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'newpaps.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'news/templates/news'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]



WSGI_APPLICATION = 'newpaps.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = "/news/news/search"

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'

ACCOUNT_FORMS = {"signup": "accounts.forms.CustomSignupForm"}

EMAIL_BACKEND='django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = 465
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True

DEFAULT_FROM_EMAIL = os.getenv("DEFAULT_FROM_EMAIL")


SERVER_EMAIL = os.getenv("SERVER_EMAIL")
MANAGERS = (
    ('Romul', 'romu@mail.ru'),
    ('Vasel', 'petel@yandex.ru'),
)
ADMINS = os.getenv("ADMINS")

SITE_URL='http://127.0.0.1:8000'



APSCHEDULER_DATETIME_FORMAT='N,j,Y,f:s a'

APSCHEDULER_RUN_NON_TIMEOUT=25


CELERY_BROKER_URL = f'redis://default:tdjnLbXFaYqh3YEWhxgx7wWcUbTibBuB@redis-15845.c302.asia-northeast1-1.gce.cloud.redislabs.com:15845'
CELERY_RESULT_BACKEND = f'redis://default:tdjnLbXFaYqh3YEWhxgx7wWcUbTibBuB@redis-15845.c302.asia-northeast1-1.gce.cloud.redislabs.com:15845'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'


CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': os.path.join(BASE_DIR, 'cache_files'),
        'TIMEOUT': 60,
    }
}

LOGGING={
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'main_format': {
            'format': ' {asctime} - {levelname} - {module} - {filename} - {message}',
            'style': '{',
        },
        'gen_format': {
            'format': '{asctime} - {levelname} - {module} - {message}',
            'style': '{',
        },
        'eror_format': {
            'format': '{asctime} - {levelname} - {message} - {exc_info}',
            'style': '{',
        },
        'sec_format':{
            'format': '{asctime} - {levelname} - {module} - {message}',
            'style': '{',
        },
         'warn_format':{
            'format': '{asctime} - {levelname} - {module} - {message} - {pathname}',
            'style': '{',
        },
    },
    'filters': {
        'require_debug_true': {
            '()':'django.utils.log.RequireDebugTrue',
        },
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',

        },
    },
    'handlers':{
         'console':{
             'level': 'INFO',
             'filters':['require_debug_true'],
             'class': 'logging.StreamHandler',
             'formatters':'main_format',
         },
        'general':{
            'level': 'DEBUG',
            'filters':['require_debug_false'],
            'class':'logging.FileHandler',
            'filename': 'general.log',
            'formatters': 'gen_format',
        },

        'mail_admins':{
            'level':'ERROR',
            'filters':['require_debug_false'],
            'class':'django.utils.log.AdminEmailHandler',
            'filename': 'errors.log',
            'formatters': 'eror_format',
        },
        'error_critical': {
            'level': 'ERROR',
            'class': 'logging.StreamHandler',
            'formatters': 'eror_format',
        },
         'console_warning': {
            'level': 'WARNING',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'filename': 'errors.log',
            'formatters': 'warn_format',
        },
        'security':{
            'level':'DEBUG',
            'class':'django.utils.log.AdminEmailHandler',
            'filename': 'security.log',
            'formatters': 'sec_format',
        },
    },
    'loggers':{
        'django':{
            'handlers':['console','console_warning','error_critical','general',],
            'level':'DEBUG',
            'propagate':'True',
        },
        'django.request':{
            'handlers':['mail_admins',],
            'level':'ERROR',
            'propagate':True,
        },
        'django.server':{
            'handlers':['mail_admins',],
            'level':'ERROR',
            'propagate':True,
        },
        'django.template':{
            'handlers':['mail_admins',],
            'level':'ERROR',
            'propagate':True,
        },
        'django.db.backends':{
            'handlers':['mail_admins',],
            'level':'ERROR',
            'propagate':True,
        },
        'django.security':{
            'handlers':['security',],
            'level':'INFO',
            'propagate':True,
        },
    },

}

